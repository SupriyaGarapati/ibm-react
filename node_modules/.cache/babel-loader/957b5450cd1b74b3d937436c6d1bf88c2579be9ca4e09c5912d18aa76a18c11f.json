{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GarapatiGanaSupriya\\\\ibm-final-demos-may-2024\\\\03-ibm-frontend-react\\\\src\\\\components\\\\employee\\\\UpdateEmployee.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateEmployee = ({\n  employees,\n  fetchEmployees\n}) => {\n  _s();\n  const [selectedEmployeeId, setSelectedEmployeeId] = useState(\"\");\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  useEffect(() => {\n    if (selectedEmployeeId && employees) {\n      const employee = employees.find(emp => emp.id === selectedEmployeeId);\n      if (employee) {\n        setSelectedEmployee(employee);\n      }\n    }\n  }, [selectedEmployeeId, employees]);\n  const handleSelectChange = e => {\n    setSelectedEmployeeId(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    axios.put(`http://localhost:8080/emp/update-emp/${selectedEmployeeId}`, selectedEmployee).then(() => {\n      alert(\"Employee updated successfully!\");\n      fetchEmployees();\n      setSelectedEmployeeId(\"\");\n      setSelectedEmployee(null);\n    }).catch(error => {\n      console.error(\"Error updating employee:\", error);\n    });\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSelectedEmployee(prevEmployee => ({\n      ...prevEmployee,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Update Employee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Select Employee:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedEmployeeId,\n        onChange: handleSelectChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), employees && employees.map(employee => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: employee.id,\n          children: [employee.firstname, \" \", employee.lastname]\n        }, employee.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), selectedEmployee && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"First Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"firstname\",\n          value: selectedEmployee.firstname,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Last Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"lastname\",\n          value: selectedEmployee.lastname,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: selectedEmployee.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Salary:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"salary\",\n          value: selectedEmployee.salary,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n};\n_s(UpdateEmployee, \"axxSXdnF7h9MsalUVYHZ0KR2b2E=\");\n_c = UpdateEmployee;\nexport default UpdateEmployee;\nvar _c;\n$RefreshReg$(_c, \"UpdateEmployee\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","UpdateEmployee","employees","fetchEmployees","_s","selectedEmployeeId","setSelectedEmployeeId","selectedEmployee","setSelectedEmployee","employee","find","emp","id","handleSelectChange","e","target","value","handleSubmit","preventDefault","put","then","alert","catch","error","console","handleChange","name","prevEmployee","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","firstname","lastname","onSubmit","type","required","email","salary","_c","$RefreshReg$"],"sources":["C:/Users/GarapatiGanaSupriya/ibm-final-demos-may-2024/03-ibm-frontend-react/src/components/employee/UpdateEmployee.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst UpdateEmployee = ({ employees, fetchEmployees }) => {\r\n    const [selectedEmployeeId, setSelectedEmployeeId] = useState(\"\");\r\n    const [selectedEmployee, setSelectedEmployee] = useState(null);\r\n  \r\n    useEffect(() => {\r\n      if (selectedEmployeeId && employees) {\r\n        const employee = employees.find(emp => emp.id === selectedEmployeeId);\r\n        if (employee) {\r\n          setSelectedEmployee(employee);\r\n        }\r\n      }\r\n    }, [selectedEmployeeId, employees]);\r\n  \r\n    const handleSelectChange = (e) => {\r\n      setSelectedEmployeeId(e.target.value);\r\n    };\r\n  \r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      axios\r\n        .put(`http://localhost:8080/emp/update-emp/${selectedEmployeeId}`, selectedEmployee)\r\n        .then(() => {\r\n          alert(\"Employee updated successfully!\");\r\n          fetchEmployees();\r\n          setSelectedEmployeeId(\"\");\r\n          setSelectedEmployee(null);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error updating employee:\", error);\r\n        });\r\n    };\r\n  \r\n    const handleChange = (e) => {\r\n      const { name, value } = e.target;\r\n      setSelectedEmployee(prevEmployee => ({\r\n        ...prevEmployee,\r\n        [name]: value\r\n      }));\r\n    };\r\n  \r\n    return (\r\n      <div>\r\n        <h2>Update Employee</h2>\r\n        <label>\r\n          Select Employee:\r\n          <select value={selectedEmployeeId} onChange={handleSelectChange}>\r\n            <option value=\"\">Select Employee</option>\r\n            {employees && employees.map(employee => (\r\n              <option key={employee.id} value={employee.id}>{employee.firstname} {employee.lastname}</option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n        {selectedEmployee && (\r\n          <form onSubmit={handleSubmit}>\r\n            <label>\r\n              First Name:\r\n              <input\r\n                type=\"text\"\r\n                name=\"firstname\"\r\n                value={selectedEmployee.firstname}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n            </label>\r\n            <br />\r\n            <label>\r\n              Last Name:\r\n              <input\r\n                type=\"text\"\r\n                name=\"lastname\"\r\n                value={selectedEmployee.lastname}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n            </label>\r\n            <br />\r\n            <label>\r\n              Email:\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={selectedEmployee.email}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n            </label>\r\n            <br />\r\n            <label>\r\n              Salary:\r\n              <input\r\n                type=\"number\"\r\n                name=\"salary\"\r\n                value={selectedEmployee.salary}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n            </label>\r\n            <br />\r\n            <button type=\"submit\">Update Employee</button>\r\n          </form>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default UpdateEmployee;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}